{"ast":null,"code":"var _jsxFileName = \"/Users/angelicamolero/Documents/Repositories/Client/src/components/task/ListTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useContext } from 'react';\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ListTask = params => {\n  _s();\n\n  // Obtain state of projects\n  const projectsContext = useContext(projectContext);\n  const {\n    project,\n    deleteProject\n  } = projectsContext; //tasks context\n\n  const tasksContext = useContext(taskContext);\n  const {\n    tasksproject\n  } = tasksContext; // if theres no selected project\n\n  if (!project) return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \" Select a Project\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 25\n  }, this); // Array destructuring to get current project\n\n  const [currentProject] = project;\n\n  const onClickDelete = () => {\n    deleteProject(currentProject.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Project: \", currentProject.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-task\",\n      children: tasksproject.length === 0 ? /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"There are no tasks\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 20\n      }, this) : /*#__PURE__*/_jsxDEV(TransitionGroup, {\n        children: tasksproject.map(task => /*#__PURE__*/_jsxDEV(CSSTransition, {\n          timeout: 200,\n          className: \"task\",\n          children: /*#__PURE__*/_jsxDEV(Task, {\n            task: task\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"btn btn-eliminate\",\n      onClick: onClickDelete,\n      children: \"Eliminate Project \\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ListTask, \"2+mDrxjF9tmQuxdAcSOPJI0AsYg=\");\n\n_c = ListTask;\nexport default ListTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTask\");","map":{"version":3,"sources":["/Users/angelicamolero/Documents/Repositories/Client/src/components/task/ListTask.js"],"names":["React","Fragment","useContext","Task","projectContext","taskContext","CSSTransition","TransitionGroup","ListTask","params","projectsContext","project","deleteProject","tasksContext","tasksproject","currentProject","onClickDelete","id","name","length","map","task"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,WAAP,MAAwB,iCAAxB;AACA,SAASC,aAAT,EAAwBC,eAAxB,QAA8C,wBAA9C;;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,IAAY;AAAA;;AAErB;AACJ,QAAMC,eAAe,GAAIR,UAAU,CAACE,cAAD,CAAnC;AACA,QAAM;AAAEO,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAA6BF,eAAnC,CAJyB,CAMzB;;AACA,QAAMG,YAAY,GAAGX,UAAU,CAACG,WAAD,CAA/B;AACA,QAAM;AAAES,IAAAA;AAAF,MAAmBD,YAAzB,CARyB,CAUzB;;AACA,MAAG,CAACF,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAXY,CAazB;;AACA,QAAM,CAACI,cAAD,IAAmBJ,OAAzB;;AAEA,QAAMK,aAAa,GAAG,MAAM;AACxBJ,IAAAA,aAAa,CAACG,cAAc,CAACE,EAAhB,CAAb;AACH,GAFD;;AAIA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA,8BAAcF,cAAc,CAACG,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBACMJ,YAAY,CAACK,MAAb,KAAwB,CAAxB,gBACC;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA,+BAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAArB;AAAA;AAAA;AAAA;AAAA,cADD,gBAEA,QAAC,eAAD;AAAA,kBACGL,YAAY,CAACM,GAAb,CAAiBC,IAAI,iBACtB,QAAC,aAAD;AAEA,UAAA,OAAO,EAAE,GAFT;AAGA,UAAA,SAAS,EAAC,MAHV;AAAA,iCAII,QAAC,IAAD;AACA,YAAA,IAAI,EAAEA;AADN;AAAA;AAAA;AAAA;AAAA;AAJJ,WACKA,IAAI,CAACJ,EADV;AAAA;AAAA;AAAA;AAAA,gBADC;AADH;AAAA;AAAA;AAAA;AAAA;AAHN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAmBI;AACI,MAAA,IAAI,EAAC,QADT;AAEI,MAAA,SAAS,EAAC,mBAFd;AAGI,MAAA,OAAO,EAAGD,aAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA4BH,CAhDD;;GAAMR,Q;;KAAAA,Q;AAkDN,eAAeA,QAAf","sourcesContent":["import React, { Fragment, useContext } from 'react'\nimport Task from './Task';\nimport projectContext from '../../context/projects/projectContext';\nimport taskContext from '../../context/tasks/taskContext';\nimport { CSSTransition, TransitionGroup} from 'react-transition-group'\n\nconst ListTask = (params) => {\n\n        // Obtain state of projects\n    const projectsContext  = useContext(projectContext);\n    const { project, deleteProject } = projectsContext;\n\n    //tasks context\n    const tasksContext = useContext(taskContext)\n    const { tasksproject } = tasksContext;\n\n    // if theres no selected project\n    if(!project) return <h2> Select a Project</h2>\n\n    // Array destructuring to get current project\n    const [currentProject] = project\n    \n    const onClickDelete = () => {\n        deleteProject(currentProject.id)\n    }\n\n    return(\n        <Fragment>\n            <h2>Project: {currentProject.name}</h2>\n            <ul className=\"list-task\">\n                { tasksproject.length === 0\n                ? (<li className=\"task\"><p>There are no tasks</p></li>)\n                : <TransitionGroup>\n                    {tasksproject.map(task => (\n                    <CSSTransition \n                    key={task.id}\n                    timeout={200}\n                    className=\"task\">\n                        <Task\n                        task={task}\n                        />\n                    </CSSTransition>\n                ))}\n                </TransitionGroup>\n                }\n            </ul>\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminate\"\n                onClick= {onClickDelete}>\n                Eliminate Project &times;\n            </button>\n        </Fragment>\n    )\n}\n\nexport default ListTask;\n"]},"metadata":{},"sourceType":"module"}