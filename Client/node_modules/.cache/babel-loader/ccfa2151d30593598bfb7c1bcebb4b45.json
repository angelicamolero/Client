{"ast":null,"code":"var _jsxFileName = \"/Users/angelicamolero/Documents/Repositories/Client/src/context/tasks/taskState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { TASKS_PROJECT, ADD_TASK } from '../../types/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    tasks: [{\n      name: 'Choose a Name',\n      state: true,\n      projectId: 1\n    }, {\n      name: 'Choose a Color',\n      state: false,\n      projectId: 2\n    }, {\n      name: 'Choose a Payment Method',\n      state: false,\n      projectId: 3\n    }, {\n      name: 'Choose a Host',\n      state: true,\n      projectId: 4\n    }, {\n      name: 'Choose a Name',\n      state: true,\n      projectId: 3\n    }, {\n      name: 'Choose a Color',\n      state: false,\n      projectId: 2\n    }, {\n      name: 'Choose a Payment Method',\n      state: false,\n      projectId: 4\n    }, {\n      name: 'Choose a Host',\n      state: true,\n      projectId: 1\n    }, {\n      name: 'Choose a Name',\n      state: true,\n      projectId: 4\n    }, {\n      name: 'Choose a Color',\n      state: false,\n      projectId: 3\n    }, {\n      name: 'Choose a Payment Method',\n      state: false,\n      projectId: 1\n    }, {\n      name: 'Choose a Host',\n      state: true,\n      projectId: 2\n    }],\n    tasksproject: null\n  };\n  const [state, dispatch] = useReducer(TaskReducer, initialState); // create fucntions\n  // obtain tasks from a project\n\n  const obtainTasks = projectId => {\n    dispatch({\n      type: TASKS_PROJECT,\n      payload: projectId\n    });\n  };\n\n  const addTasks = task => {\n    dispatch({\n      type: ADD_TASK,\n      payload: task\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      tasksproject: state.tasksproject,\n      obtainTasks,\n      addTasks\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["/Users/angelicamolero/Documents/Repositories/Client/src/context/tasks/taskState.js"],"names":["React","useReducer","TaskContext","TaskReducer","TASKS_PROJECT","ADD_TASK","TaskState","props","initialState","tasks","name","state","projectId","tasksproject","dispatch","obtainTasks","type","payload","addTasks","task","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport TaskContext from './taskContext'\nimport TaskReducer from './taskReducer'\nimport { TASKS_PROJECT, ADD_TASK } from '../../types/index'\n\nconst TaskState = props => {\n    const initialState = {\n        tasks: [\n            { name: 'Choose a Name', state: true, projectId: 1 },\n            { name: 'Choose a Color', state: false, projectId: 2 },\n            { name: 'Choose a Payment Method', state: false, projectId: 3 },\n            { name: 'Choose a Host', state: true, projectId: 4 },\n            { name: 'Choose a Name', state: true, projectId: 3 },\n            { name: 'Choose a Color', state: false, projectId: 2 },\n            { name: 'Choose a Payment Method', state: false, projectId: 4 },\n            { name: 'Choose a Host', state: true, projectId: 1 },\n            { name: 'Choose a Name', state: true, projectId: 4 },\n            { name: 'Choose a Color', state: false, projectId: 3 },\n            { name: 'Choose a Payment Method', state: false, projectId: 1 },\n            { name: 'Choose a Host', state: true, projectId: 2 }\n        ],\n        tasksproject: null\n    }\n\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\n\n    // create fucntions\n\n    // obtain tasks from a project\n    const obtainTasks = projectId => {\n        dispatch({\n            type: TASKS_PROJECT,\n            payload: projectId\n        })\n    }\n\n    const addTasks = task => {\n        dispatch ({\n            type: ADD_TASK,\n            payload: task\n        })\n    }\n\n    return(\n        <TaskContext.Provider\n            value={{\n                tasks: state.tasks,\n                tasksproject: state.tasksproject,\n                obtainTasks,\n                addTasks\n            }}\n        >\n            {props.children}\n        </TaskContext.Provider>\n    )\n}\nexport default TaskState;"]},"metadata":{},"sourceType":"module"}