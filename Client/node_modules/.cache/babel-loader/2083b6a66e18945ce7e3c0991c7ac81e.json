{"ast":null,"code":"var _jsxFileName = \"/Users/angelicamolero/Documents/Repositories/Client/src/context/projects/projectState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { FORM_PROJECT, OBTAIN_PROJECTS, ADD_PROJECT, VALIDATE_FORM } from '../../types';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectState = props => {\n  _s();\n\n  const projects = [{\n    id: 1,\n    name: 'Online Store'\n  }, {\n    id: 2,\n    name: 'Intranet'\n  }, {\n    id: 3,\n    name: 'Website Design'\n  }];\n  const initialState = {\n    projects: [],\n    form: false,\n    errorForm: false\n  }; // Dispatch to run actions\n\n  const [state, dispatch] = useReducer(projectReducer, initialState); // Functions for CRUD\n\n  const showForm = () => {\n    dispatch({\n      type: FORM_PROJECT\n    });\n  }; // Obtain projects \n\n\n  const obtainProjects = () => {\n    dispatch({\n      type: OBTAIN_PROJECTS,\n      payload: projects\n    });\n  };\n\n  const uuid = require('uuid').v4; // Add new project\n\n\n  const addProject = project => {\n    project.id = uuid();\n    dispatch({\n      type: ADD_PROJECT,\n      payload: project\n    });\n  }; // VALIDATE FORM AND SHOW ERROR\n\n\n  const showError = () => {\n    dispatch({\n      type: VALIDATE_FORM\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(projectContext.Provider, {\n    value: {\n      projects: state.projects,\n      form: state.form,\n      errorForm: state.errorForm,\n      showForm,\n      obtainProjects,\n      addProject,\n      showError\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProjectState;\nexport default ProjectState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectState\");","map":{"version":3,"sources":["/Users/angelicamolero/Documents/Repositories/Client/src/context/projects/projectState.js"],"names":["React","useReducer","projectContext","projectReducer","FORM_PROJECT","OBTAIN_PROJECTS","ADD_PROJECT","VALIDATE_FORM","v4","uuid","ProjectState","props","projects","id","name","initialState","form","errorForm","state","dispatch","showForm","type","obtainProjects","payload","require","addProject","project","showError","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,WAAxC,EAAqDC,aAArD,QAAyE,aAAzE;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;;AAGA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,QAAQ,GAAG,CACb;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADa,EAEb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFa,EAGb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHa,CAAjB;AAMA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,QAAQ,EAAG,EADM;AAEjBI,IAAAA,IAAI,EAAG,KAFU;AAGjBC,IAAAA,SAAS,EAAE;AAHM,GAArB,CAP0B,CAY1B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,UAAU,CAACE,cAAD,EAAiBY,YAAjB,CAApC,CAb0B,CAe1B;;AACA,QAAMK,QAAQ,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEjB;AADD,KAAD,CAAR;AAGH,GAJD,CAhB0B,CAsB1B;;;AACA,QAAMkB,cAAc,GAAG,MAAM;AACzBH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEhB,eADD;AAELkB,MAAAA,OAAO,EAAEX;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,QAAMH,IAAI,GAAGe,OAAO,CAAC,MAAD,CAAP,CAAgBhB,EAA7B,CA9B0B,CA+B1B;;;AACA,QAAMiB,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACb,EAAR,GAAaJ,IAAI,EAAjB;AAEAU,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,WADD;AAELiB,MAAAA,OAAO,EAAEG;AAFJ,KAAD,CAAR;AAIH,GAPD,CAhC0B,CAyC1B;;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACpBR,IAAAA,QAAQ,CAAE;AACNE,MAAAA,IAAI,EAAEd;AADA,KAAF,CAAR;AAGH,GAJD;;AAMA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHK,MAAAA,QAAQ,EAAEM,KAAK,CAACN,QADb;AAEHI,MAAAA,IAAI,EAAEE,KAAK,CAACF,IAFT;AAGHC,MAAAA,SAAS,EAAEC,KAAK,CAACD,SAHd;AAIHG,MAAAA,QAJG;AAKHE,MAAAA,cALG;AAMHG,MAAAA,UANG;AAOHE,MAAAA;AAPG,KADP;AAAA,cAYKhB,KAAK,CAACiB;AAZX;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjED;;GAAMlB,Y;;KAAAA,Y;AAmEN,eAAeA,YAAf","sourcesContent":["import React,  {useReducer} from 'react'\nimport projectContext from './projectContext'\nimport projectReducer from './projectReducer'\nimport { FORM_PROJECT, OBTAIN_PROJECTS, ADD_PROJECT, VALIDATE_FORM} from '../../types';\nimport {v4 as uuid} from 'uuid';\n\n\nconst ProjectState = props => {\n    const projects = [\n        { id: 1, name: 'Online Store'},\n        {id: 2, name: 'Intranet'},\n        {id: 3, name: 'Website Design'}\n    ]\n\n    const initialState = {\n        projects : [],\n        form : false,\n        errorForm: false\n    }\n    // Dispatch to run actions\n    const [state, dispatch] = useReducer(projectReducer, initialState);\n\n    // Functions for CRUD\n    const showForm = () => {\n        dispatch({\n            type: FORM_PROJECT\n        })\n    }\n\n    // Obtain projects \n    const obtainProjects = () => {\n        dispatch({\n            type: OBTAIN_PROJECTS,\n            payload: projects\n        })\n    }\n\n    const uuid = require('uuid').v4\n    // Add new project\n    const addProject = project => {\n        project.id = uuid();\n\n        dispatch({\n            type: ADD_PROJECT,\n            payload: project\n        })\n    }\n\n    // VALIDATE FORM AND SHOW ERROR\n\n    const showError = () => {\n        dispatch ({\n            type: VALIDATE_FORM\n        })\n    }\n\n    return(\n        <projectContext.Provider\n        value={{\n            projects: state.projects,\n            form: state.form,\n            errorForm: state.errorForm,\n            showForm,\n            obtainProjects,\n            addProject,\n            showError\n        }}\n        >\n           \n            {props.children}\n        </projectContext.Provider>\n    )\n}\n\nexport default ProjectState;"]},"metadata":{},"sourceType":"module"}