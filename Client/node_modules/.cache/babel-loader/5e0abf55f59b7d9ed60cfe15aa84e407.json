{"ast":null,"code":"var _jsxFileName = \"/Users/angelicamolero/Documents/Repositories/Client/src/context/tasks/taskState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TaskContext from './taskContext';\nimport TaskReducer from './taskReducer';\nimport { TASKS_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK } from '../../types/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TaskState = props => {\n  _s();\n\n  const initialState = {\n    tasks: [{\n      id: 1,\n      name: 'Choose a Name',\n      state: true,\n      projectId: 1\n    }, {\n      id: 2,\n      name: 'Choose a Color',\n      state: false,\n      projectId: 2\n    }, {\n      id: 3,\n      name: 'Choose a Payment Method',\n      state: false,\n      projectId: 3\n    }, {\n      id: 4,\n      name: 'Choose a Host',\n      state: true,\n      projectId: 4\n    }, {\n      id: 5,\n      name: 'Choose a Name',\n      state: true,\n      projectId: 3\n    }, {\n      id: 6,\n      name: 'Choose a Color',\n      state: false,\n      projectId: 2\n    }, {\n      id: 7,\n      name: 'Choose a Payment Method',\n      state: false,\n      projectId: 4\n    }, {\n      id: 8,\n      name: 'Choose a Host',\n      state: true,\n      projectId: 1\n    }, {\n      id: 9,\n      name: 'Choose a Name',\n      state: true,\n      projectId: 4\n    }, {\n      id: 10,\n      name: 'Choose a Color',\n      state: false,\n      projectId: 3\n    }, {\n      id: 11,\n      name: 'Choose a Payment Method',\n      state: false,\n      projectId: 1\n    }, {\n      id: 12,\n      name: 'Choose a Host',\n      state: true,\n      projectId: 2\n    }],\n    tasksproject: null,\n    errortask: false\n  };\n  const [state, dispatch] = useReducer(TaskReducer, initialState); // create fucntions\n  // obtain tasks from a project\n\n  const obtainTasks = projectId => {\n    dispatch({\n      type: TASKS_PROJECT,\n      payload: projectId\n    });\n  };\n\n  const addTasks = task => {\n    dispatch({\n      type: ADD_TASK,\n      payload: task\n    });\n  }; //validate and show an error\n\n\n  const validateTask = () => {\n    dispatch({\n      type: VALIDATE_TASK\n    });\n  }; //delete tasks by id\n\n\n  const deleteTask = id => {\n    dispatch({\n      type: DELETE_TASK,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskContext.Provider, {\n    value: {\n      tasks: state.tasks,\n      tasksproject: state.tasksproject,\n      errortask: state.errortask,\n      obtainTasks,\n      addTasks,\n      validateTask,\n      deleteTask\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TaskState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TaskState;\nexport default TaskState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskState\");","map":{"version":3,"sources":["/Users/angelicamolero/Documents/Repositories/Client/src/context/tasks/taskState.js"],"names":["React","useReducer","TaskContext","TaskReducer","TASKS_PROJECT","ADD_TASK","VALIDATE_TASK","DELETE_TASK","TaskState","props","initialState","tasks","id","name","state","projectId","tasksproject","errortask","dispatch","obtainTasks","type","payload","addTasks","task","validateTask","deleteTask","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport TaskContext from './taskContext'\nimport TaskReducer from './taskReducer'\nimport { TASKS_PROJECT, ADD_TASK, VALIDATE_TASK, DELETE_TASK } from '../../types/index'\n\nconst TaskState = props => {\n    const initialState = {\n        tasks: [\n            { id: 1, name: 'Choose a Name', state: true, projectId: 1 },\n            { id: 2, name: 'Choose a Color', state: false, projectId: 2 },\n            { id: 3, name: 'Choose a Payment Method', state: false, projectId: 3 },\n            { id: 4, name: 'Choose a Host', state: true, projectId: 4 },\n            { id: 5, name: 'Choose a Name', state: true, projectId: 3 },\n            { id: 6, name: 'Choose a Color', state: false, projectId: 2 },\n            { id: 7, name: 'Choose a Payment Method', state: false, projectId: 4 },\n            { id: 8, name: 'Choose a Host', state: true, projectId: 1 },\n            { id: 9, name: 'Choose a Name', state: true, projectId: 4 },\n            { id: 10, name: 'Choose a Color', state: false, projectId: 3 },\n            { id: 11, name: 'Choose a Payment Method', state: false, projectId: 1 },\n            { id: 12, name: 'Choose a Host', state: true, projectId: 2 }\n        ],\n        tasksproject: null,\n        errortask: false\n    }\n\n    const [state, dispatch] = useReducer(TaskReducer, initialState);\n\n    // create fucntions\n\n    // obtain tasks from a project\n    const obtainTasks = projectId => {\n        dispatch({\n            type: TASKS_PROJECT,\n            payload: projectId\n        })\n    }\n\n    const addTasks = task => {\n        dispatch ({\n            type: ADD_TASK,\n            payload: task\n        })\n    }\n\n    //validate and show an error\n    const validateTask = () => {\n        dispatch({\n            type: VALIDATE_TASK\n        })\n    }\n\n    //delete tasks by id\n    const deleteTask = id => {\n        dispatch({\n            type:  DELETE_TASK,\n            payload: id\n        })\n    }\n\n    return(\n        <TaskContext.Provider\n            value={{\n                tasks: state.tasks,\n                tasksproject: state.tasksproject,\n                errortask: state.errortask,\n                obtainTasks,\n                addTasks,\n                validateTask,\n                deleteTask\n            }}\n        >\n            {props.children}\n        </TaskContext.Provider>\n    )\n}\nexport default TaskState;"]},"metadata":{},"sourceType":"module"}