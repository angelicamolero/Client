{"ast":null,"code":"var _jsxFileName = \"/Users/angelicamolero/Documents/Repositories/Client/src/context/projects/projectState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport projectContext from './projectContext';\nimport projectReducer from './projectReducer';\nimport { FORM_PROJECT, OBTAIN_PROJECTS, ADD_PROJECT } from '../../types';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectState = props => {\n  _s();\n\n  const projects = [{\n    id: 1,\n    name: 'Online Store'\n  }, {\n    id: 2,\n    name: 'Intranet'\n  }, {\n    id: 3,\n    name: 'Website Design'\n  }];\n  const initialState = {\n    projects: [],\n    form: false\n  }; // Dispatch to run actions\n\n  const [state, dispatch] = useReducer(projectReducer, initialState); // Functions for CRUD\n\n  const showForm = () => {\n    dispatch({\n      type: FORM_PROJECT\n    });\n  }; // Obtain projects \n\n\n  const obtainProjects = () => {\n    dispatch({\n      type: OBTAIN_PROJECTS,\n      payload: projects\n    });\n  }; // Add new project\n\n\n  const addProject = project => {\n    project.id = uuid.v4();\n    dispatch({\n      type: ADD_PROJECT,\n      payload: project\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(projectContext.Provider, {\n    value: {\n      projects: state.projects,\n      form: state.form,\n      showForm,\n      obtainProjects,\n      addProject\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProjectState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ProjectState;\nexport default ProjectState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectState\");","map":{"version":3,"sources":["/Users/angelicamolero/Documents/Repositories/Client/src/context/projects/projectState.js"],"names":["React","useReducer","projectContext","projectReducer","FORM_PROJECT","OBTAIN_PROJECTS","ADD_PROJECT","v4","uuid","ProjectState","props","projects","id","name","initialState","form","state","dispatch","showForm","type","obtainProjects","payload","addProject","project","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,YAAT,EAAuBC,eAAvB,EAAwCC,WAAxC,QAA0D,aAA1D;AACA,SAAQC,EAAE,IAAIC,IAAd,QAAyB,MAAzB;;;AAGA,MAAMC,YAAY,GAAGC,KAAK,IAAI;AAAA;;AAC1B,QAAMC,QAAQ,GAAG,CACb;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADa,EAEb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAFa,EAGb;AAACD,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAHa,CAAjB;AAMA,QAAMC,YAAY,GAAG;AACjBH,IAAAA,QAAQ,EAAG,EADM;AAEjBI,IAAAA,IAAI,EAAG;AAFU,GAArB,CAP0B,CAW1B;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,UAAU,CAACE,cAAD,EAAiBW,YAAjB,CAApC,CAZ0B,CAc1B;;AACA,QAAMI,QAAQ,GAAG,MAAM;AACnBD,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf;AADD,KAAD,CAAR;AAGH,GAJD,CAf0B,CAqB1B;;;AACA,QAAMgB,cAAc,GAAG,MAAM;AACzBH,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd,eADD;AAELgB,MAAAA,OAAO,EAAEV;AAFJ,KAAD,CAAR;AAIH,GALD,CAtB0B,CA6B1B;;;AACA,QAAMW,UAAU,GAAGC,OAAO,IAAI;AAC1BA,IAAAA,OAAO,CAACX,EAAR,GAAaJ,IAAI,CAACD,EAAL,EAAb;AAEAU,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,WADD;AAELe,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GAPD;;AASA,sBACI,QAAC,cAAD,CAAgB,QAAhB;AACA,IAAA,KAAK,EAAE;AACHZ,MAAAA,QAAQ,EAAEK,KAAK,CAACL,QADb;AAEHI,MAAAA,IAAI,EAAEC,KAAK,CAACD,IAFT;AAGHG,MAAAA,QAHG;AAIHE,MAAAA,cAJG;AAKHE,MAAAA;AALG,KADP;AAAA,cAUKZ,KAAK,CAACc;AAVX;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CArDD;;GAAMf,Y;;KAAAA,Y;AAuDN,eAAeA,YAAf","sourcesContent":["import React,  {useReducer} from 'react'\nimport projectContext from './projectContext'\nimport projectReducer from './projectReducer'\nimport { FORM_PROJECT, OBTAIN_PROJECTS, ADD_PROJECT} from '../../types';\nimport {v4 as uuid} from 'uuid';\n\n\nconst ProjectState = props => {\n    const projects = [\n        { id: 1, name: 'Online Store'},\n        {id: 2, name: 'Intranet'},\n        {id: 3, name: 'Website Design'}\n    ]\n\n    const initialState = {\n        projects : [],\n        form : false\n    }\n    // Dispatch to run actions\n    const [state, dispatch] = useReducer(projectReducer, initialState);\n\n    // Functions for CRUD\n    const showForm = () => {\n        dispatch({\n            type: FORM_PROJECT\n        })\n    }\n\n    // Obtain projects \n    const obtainProjects = () => {\n        dispatch({\n            type: OBTAIN_PROJECTS,\n            payload: projects\n        })\n    }\n\n    // Add new project\n    const addProject = project => {\n        project.id = uuid.v4();\n\n        dispatch({\n            type: ADD_PROJECT,\n            payload: project\n        })\n    }\n\n    return(\n        <projectContext.Provider\n        value={{\n            projects: state.projects,\n            form: state.form,\n            showForm,\n            obtainProjects,\n            addProject\n        }}\n        >\n           \n            {props.children}\n        </projectContext.Provider>\n    )\n}\n\nexport default ProjectState;"]},"metadata":{},"sourceType":"module"}